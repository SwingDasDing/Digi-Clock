{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../canvas-assets/Segment.class.ts","../canvas-assets/colon.class.ts","../classes/point.class.ts","../canvas-assets/seg-number.class.ts","../index.ts"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEVA,AEDA,AJYA,ICVa,ACDb,AEDA,ADAa,aCAb,EFCA,CEDA,EFCA,KEDA,CAAA,CFCA,CAAA,iBAAA,CAAA,IEDA,CAAA;AHGI,AEFA,AHYJ,iBGZuB,CAAnB,CFGW,CEH0B,CAArC,EAA8C,GFE9C,EAEW,QAFX,EAGW,SAHX,EAG+C;AAAA,AGLnD,ADAkD,AHalD,IEXa,AEFb,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AFGI,AFWJ,iBEVe,OADX,EAEW,QAFX,EAE0B;ADFf,ACEe,ACLP,AHevB,IIba,KHCE,AEHQ,CAAA,GAAA,CAAA,EFGR,GAAA,OAAA;AACA,AGDX,ADHqC,AHgBzC,SCZe,AEJ0B,CAAA,GAAA,CAAA,GFI1B,GAAA,CGAA,OHAA,AGDX,EAEW,QAFX,EAG6B;AHDlB,ACDA,AEEkB,ADNqB,AHiBtD,QIXe,CHDA,ACDA,KEEkB,EFFlB,EDCA,CCDA,EDCA,KCDA,IDCA,uDGCiB,CAAC;AHetB,AChBI,AFaf,SCGW,AChBI,MDgBJ,EChBI,CDgBc,EChBd,EDgBJ,MChBI;ADCP,ACEG,AEFsB,AJajC,SEXW,IAAA,GAAe,eAAA,CAAA,OAAA,CAAQ,MAAR,GAAiB,CAAhC;AAEA,AFUX,SEVW,MAAA,GAAkB,IAAlB;AAJH,AEFO,AJiBf,SIjBe,OAAA,GAAA,OAAA,KDEO,KAAU;ACDjB,ADEP,AERR,ALuBA,OKvBA,CAAA,CDMe,CDED,KAAK,ECFJ,CDEO,ECFP,GDEY,CAAL,GAAS,CCFhB,EDEmB,CAAC,CAA3B,KERR,CAAA;ADOe,ADEP,AHeR,SIjBe,CDED,KCFC,ADEI,GCFJ,ADEO,KAAK,CCFZ,ADEO,GFeP,AEfgB,GAAG,CAAC,CAA3B;AFgBA,AGeI,AD9BJ,AETR,ALwBA,IKxBA,KDuCY,EHfC,EEfE,IC8BH,AD9BO,AETnB,CJwBQ,AEfY,CFeC,CGea,ACvClC,EDuCY,CHfJ,AEfO,CAAW,GET1B,CAAA,CFSe,EAAkB,KAAlB,CAAP,oBETR,CAAA;AJ0BQ,AGlBA,ADEH,AHeL,SIjBa,EHk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,ACXA,AEkBb,CAAc,GFlBd,EDWA,CAAoB,CGOpB,AD7BU,CC6BY,KHPK,CAAC,CEtBH,GC6BH,GHPtB,AGOyB,EHPY,AGOT,CHP5B,AEtBwC;AFuBxC,ACVA,AEiBI,AD7BJ,AEKJ,ALaJ,QIWY,ED7BE,CFsBD,ACVA,AEiBE,CAAC,CD7BC,GAAG,EFsBZ,ACVA,AEiBI,CHPS,ACVA,CCZG,CAAC,GAAL,CFsBZ,AEtBqB,CFuBjB,ACXJ,MCZY,CFuBD,AEvBX,CFuBY,MAAR,GAAiB,CADrB,EAEI,CAAC,OAAO,CAAC,MAAT,GAAkB,CAAlB,GAAsB,OAAO,CAAC,OAFlC;AAIA,ACbH,AEiBI,AD7BD,AHkBR,OISQ,GD3BM,CFyBD,EEzBI,GAAG,EFyBZ,CAAa,CEzBG,CAAC,GAAL,CFyBZ,AEzBqB,CF0BjB,ME1BQ,CF0BD,AE1BX,CF0BY,KAAR,GAAgB,OAAO,CAAC,MAAR,GAAiB,CADrC,EAEI,CAAC,OAAO,CAAC,MAAT,GAAkB,CAAlB,GAAsB,OAAO,CAAC,OAFlC;AAIA,AGEA,AD7BA,AETI,AL0BZ,SK1BY,CFSE,CF2BD,AGEA,CD7BG,GACJ,GF0BJ,AGEA,AD5BO,CF0BM,AGEA,ACtCT,GFUO,AEVM,GJoCjB,CAAoB,AGEpB,CD5BgB,CAAL,GAAS,EF0BO,CAAC,GE1BF,AEVT,CFUU,AEVV,CJoCG,AE1Bb,CAAH,EF0BgC,CE1BJ,EEVf,CFUkB,AEVV,GJoCkB,CAAC,AE1BL,CEVtB,GAAgB,CFUW,CAAL,CF0BvC,AIpCI,EJoCiD,AE1BL,CF0BhD,KE1BsD,CAAC,CAApB,CAA/B,GAAwD,MAAM,CAAC,CADnE;AF4BA,AGEH,AD5BG,AELI,ALqBZ,SKrBY,CFKE,CF0BD,CE1BG,GACJ,GFyBJ,AEzBO,CFyBM,CI/BT,EFMO,CENO,EJ+BlB,CACI,CE1BY,AENM,CFMX,GAAS,EF0BT,CAAC,GE1Bc,CAAC,CF0BvB,AE1BG,CAAH,AENkB,CAAA,CJgCF,CE1BY,GAAG,AENjB,CAClB,EJ+B2B,CAAC,AE1BW,EELlC,GFKuC,CF0BxB,AE1BmB,GF0BF,AE1BW,CFyBhD,EAEI,AIhCJ,GFKsD,AELpC,CFKqC,AELvD,CFKmC,CAA/B,CF2BO,AIhCY,CJgCX,CE3BgD,KF2BxD,CE3B8D,CAAC,CF2B9C,AE5BrB,CF4BI,GAAqB,CIhCF,CAAA,KJgCS,CAAC,CIhCV,CAAQ,KJ8B/B,CI9BuB,GAAiB,GAAlB,GAAyB,CAD7B,EAElB,eAAA,CAAA,OAAA,CAAQ,KAFU,CAAd;AJmCJ,AE3BA,AEFA,ALgBR,SKhBa,EJ6BA,EE3BE,GEFP,CFEW,CF2BX,CAAa,AI7BE,GFER,CAAU,EF2BjB,AE3BO,CF4BH,CE5BiB,AEFE,CAAC,CHSf,ACPF,CAAP,GF4BW,CAAC,MAAR,CI9BW,CAAuB,CJ8BjB,CADrB,EAEI,OAAO,AI/BI,CJ+BH,AI/BZ,MJ+BI,GAAiB,CAAjB,GAAqB,OAAO,CAAC,OAFjC;AAIA,ACvBA,ACPH,AEDG,ALeR,SKfa,EJ+BA,ACvBA,IAAL,GDuBA,CAAa,AI/Bb,GAAkB,MJ+BlB,EI/B0B,CAAC,aAAT,CACd,cADc,CAAlB;AJiCA,ACxBH,AGNG,ALaR,SKba,EJ8BA,OAAL,CAAa,EI9Bb,EJ8BA,CI9BoB,KDwBX,GCxBmB,CAAC,aAAT,CAChB,cADgB,CAApB;AJgCA,AGRS,ACrBT,ALWR,SKXa,EJ6BA,OAAL,CAAa,CI7Bb,GAAmB,GJ6BnB,KI7B2B,CAAC,aAAT,CACf,cADe,CAAnB;AJ8BH,AI1BG,ALQR,SKRa,IAAL,gBFPY,SAAgB;ACyB5B,ADxBA,AEOH,ALQL,WISa,QAAL,CAAc,OAAd,CAAsB,UAAC,GAAD,EAAM,CAAN,EAAW;AAC7B,ADxBJ,AHeR,QISY,GAAG,CAAC,MAAJ,GAAa,CAAC,EACT,SAAS,CAAC,QAAV,CAAmB,GAAnB,CAAuB,KAAI,CAAC,MAA5B,KAAwC,IAAI,CAA7C,GACA,CAFU,CAAd;AAIH,AD1BD,AHcR,OIOQ,GDrBM,CAAC,GAAG,KAAK,CAAf,SF+BS;AACT,AC7DR,AEyDQ,AD3BA,AHcR,OE5CA,CAAA,EC8Bc,CF+BD,AGJA,AD3BE,ED9Bf,CC8BkB,CF+BV,AGJA,CFzDR,GC8BuB,CAAf,CD9BR;AD8DK,AGJA,AD1BG,AHaR,UGbY,MAAM,GAAG,KAAb,CAP4B,CAS5B,CECO;AAAA,ALWf;AGXQ,AHYR,WGZa,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,OAAO,CAAC,MAAR,GAAiB,CAArC,EAAwC,CAAC,GAAG,OAAO,CAAC,MAApD,EAA4D,CAAC,GAAG,CAAC,EAAjE,EAAqE;AACjE,AEAJ,ALYR,WKZa,CFAK,EAAE,GAAG,OAAO,CAAC,CAAD,CAAP,CAAW,CAAtB,AEAJ;AFCI,AECJ,ALWR,WKXa,CFDK,EAAE,GAAG,EECf,GAAgB,EFDM,CAAC,CAAD,CAAP,AECM,CFDK,CAAtB,KECY,CAAa,UAAb,CAAwB,IAAxB,CAAhB;AFAI,AECJ,ALWR,WKXa,CFDK,EAAE,GAAG,CECf,CAAa,KFDS,AECtB,CFDuB,CAAD,CAAP,AECM,CFDK,CAAtB,IECuB,CAAC,UAA5B;AJxCR,AGCA,ADuCY,AECJ,ALWR,OCpDA,AGCA,CHDA,AGCA,GCwCa,CFDK,EAAE,CFxCpB,EGCA,ADuCuB,CFxCvB,AIyCQ,CAAa,CDxCrB,IDuC8B,CFxC9B,AEwC+B,AECvB,CFDsB,CAAP,CAAW,AECJ,CDxC9B,ADuCY,KECwB,CAAC,WAA7B;AJlCoB,AGkBT,ADiBP,AECJ,ALUR,OC9C4B,CAAA,CGkBT,CAAA,CHlBS,AIoCf,CFDK,EFnCgB,GIoC1B,CJpCoB,AGkBT,EHlBqB,AIoClB,CDlBQ,ADiBH,AEEf,GFDI,CClBkB,ACmBlB,CFDE,EClBY,CAAwB,ADkBjC,CCjBb,ADiBQ,CCjBP,CAAD,EAAI,CDiBe,EAAE,CCjBrB,ACkBQ,CDnBsC,ACmBtC,CFDgB,CChBxB,ADgBQ,CChBP,CAAD,CCiBI,CDjBA,ADiBI,AECA,CFDC,GCjBT,ADiBa,CCnBiC,ADmBhC,AECD,EDjBb,ADgBgB,CChBf,CAAD,CDgBmB,CChBf,CDgBS,CEAT,EDhBJ,ACkBQ,CDrBsC,CDmBpB,CCf1B,ADe2B,CCf1B,ACiBW,CDjBZ,CDe8B,CCf1B,CDeS,CAAD,ECfZ,CAJ8C,CDmBR,CCdtC,CAAC,ADcuC,CCdxC,CCgBY,CDhBR,ADcuC,AEE/B,EFFA,ECdZ,CAL8C,ACqBtC,CFFyC,AEE/B,C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":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { Point } from '../classes/point.class';\r\n\r\nexport class Segment {\r\n    constructor(\r\n        public context: CanvasRenderingContext2D,\r\n        public position: Point,\r\n        public direction: 'vertical' | 'horizontal'\r\n    ) {}\r\n\r\n    private static readonly wid = 0.23; // Base height ratio\r\n    private static readonly len = 1; // Base width ratio\r\n    private static mult = 100; // Size multiplier - Change this to change the size of the numbers\r\n\r\n    public static height: number = Segment.wid * Segment.mult;\r\n    public static width: number = Segment.len * Segment.mult;\r\n\r\n    public static padding: number = Segment.height * 0.08;\r\n\r\n    public static red = 255;\r\n    public static green = 255;\r\n    public static blue = 255;\r\n\r\n    public active: boolean = true;\r\n\r\n    public draw(): void {\r\n        this.context.save();\r\n\r\n        this.context.fillStyle = `rgba(${Segment.red},${Segment.green},${\r\n            Segment.blue\r\n        },${this.active ? 0.8 : 0.04})`;\r\n\r\n        this.context.translate(this.position.x, this.position.y);\r\n\r\n        if (this.direction !== 'horizontal') {\r\n            this.context.rotate(Math.PI / 2);\r\n        }\r\n\r\n        this.context.beginPath();\r\n        this.context.moveTo(Segment.padding, 0);\r\n        this.context.lineTo(\r\n            Segment.height / 2,\r\n            -Segment.height / 2 + Segment.padding\r\n        );\r\n        this.context.lineTo(\r\n            Segment.width - Segment.height / 2,\r\n            -Segment.height / 2 + Segment.padding\r\n        );\r\n        this.context.lineTo(Segment.width - Segment.padding, 0);\r\n        this.context.lineTo(\r\n            Segment.width - Segment.height / 2,\r\n            Segment.height / 2 - Segment.padding\r\n        );\r\n        this.context.lineTo(\r\n            Segment.height / 2,\r\n            Segment.height / 2 - Segment.padding\r\n        );\r\n        this.context.closePath();\r\n\r\n        this.context.fill();\r\n\r\n        this.context.restore();\r\n    }\r\n\r\n    public update(): void {\r\n        this.draw();\r\n    }\r\n}\r\n","import { Point } from '../classes/point.class';\r\nimport { Segment } from './Segment.class';\r\n\r\nexport class Colon {\r\n    constructor(\r\n        public context: CanvasRenderingContext2D,\r\n        public position: Point\r\n    ) {}\r\n\r\n    public size: number = Segment.height / 2;\r\n\r\n    public active: boolean = true;\r\n\r\n    public draw(): void {\r\n        this.context.save();\r\n\r\n        this.context.fillStyle = `rgba(${Segment.red},${Segment.green},${\r\n            Segment.blue\r\n        },${this.active ? 0.8 : 0.04})`;\r\n\r\n        this.context.translate(this.position.x, this.position.y);\r\n\r\n        this.context.beginPath();\r\n        this.context.arc(0, -Segment.width / 2, this.size, 0, Math.PI * 2);\r\n        this.context.arc(0, Segment.width / 2, this.size, 0, Math.PI * 2);\r\n        this.context.closePath();\r\n\r\n        this.context.fill();\r\n\r\n        this.context.restore();\r\n    }\r\n\r\n    public update(): void {\r\n        this.draw();\r\n    }\r\n}\r\n","export class Point {\r\n    constructor(public x: number, public y: number) {}\r\n\r\n    public static get Empty(): Point {\r\n        return new Point(0, 0);\r\n    }\r\n\r\n    public distanceTo(pos: Point): number {\r\n        const tempX = this.x - pos.x;\r\n        const tempY = this.y - pos.y;\r\n        return Math.hypot(tempX, tempY);\r\n    }\r\n    public offset(offset: Point): Point {\r\n        return new Point(this.x + offset.x, this.y + offset.y);\r\n    }\r\n\r\n    public rotate(origin: Point, radians: number) {\r\n        const cos = Math.cos(radians);\r\n        const sin = Math.sin(radians);\r\n\r\n        const nx =\r\n            cos * (this.x - origin.x) + sin * (this.y - origin.y) + origin.x;\r\n        const ny =\r\n            cos * (this.y - origin.y) - sin * (this.x - origin.x) + origin.y;\r\n\r\n        return new Point(nx, ny);\r\n    }\r\n\r\n    public isInside(polygon: Point[]): boolean {\r\n        // ray-casting algorithm based on\r\n        // https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\r\n\r\n        const x = this.x;\r\n        const y = this.y;\r\n\r\n        let inside = false;\r\n\r\n        // tslint:disable-next-line:one-variable-per-declaration\r\n        for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\r\n            const xi = polygon[i].x;\r\n            const yi = polygon[i].y;\r\n            const xj = polygon[j].x;\r\n            const yj = polygon[j].y;\r\n\r\n            const intersect =\r\n                yi > y !== yj > y &&\r\n                x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\r\n\r\n            if (intersect) inside = !inside;\r\n        }\r\n\r\n        return inside;\r\n    }\r\n\r\n    public toString(): string {\r\n        return `(${this.x},${this.y})`;\r\n    }\r\n}\r\n","import { Point } from '../classes/point.class';\r\nimport { Segment } from './Segment.class';\r\n\r\nexport class SegNumber {\r\n    constructor(\r\n        public context: CanvasRenderingContext2D,\r\n        public position: Point,\r\n        public number: number = 0\r\n    ) {\r\n        this.segments.push(\r\n            new Segment(this.context, new Point(0, 0), 'horizontal'),\r\n            new Segment(this.context, new Point(Segment.width, 0), 'vertical'),\r\n            new Segment(\r\n                this.context,\r\n                new Point(Segment.width, Segment.width),\r\n                'vertical'\r\n            ),\r\n            new Segment(\r\n                this.context,\r\n                new Point(0, Segment.width * 2),\r\n                'horizontal'\r\n            ),\r\n            new Segment(this.context, new Point(0, Segment.width), 'vertical'),\r\n            new Segment(this.context, new Point(0, 0), 'vertical'),\r\n            new Segment(this.context, new Point(0, Segment.width), 'horizontal')\r\n        );\r\n    }\r\n    private static encoding = new Map<number, number>([\r\n        [0, 0x7e],\r\n        [1, 0x30],\r\n        [2, 0x6d],\r\n        [3, 0x79],\r\n        [4, 0x33],\r\n        [5, 0x5b],\r\n        [6, 0x5f],\r\n        [7, 0x70],\r\n        [8, 0x7f],\r\n        [9, 0x7b]\r\n    ]);\r\n\r\n    private segments: Segment[] = [];\r\n\r\n    public draw(): void {\r\n        this.context.save();\r\n        this.context.translate(this.position.x, this.position.y);\r\n        this.segments.forEach(seg => {\r\n            seg.update();\r\n        });\r\n\r\n        this.context.restore();\r\n    }\r\n\r\n    public update(): void {\r\n        this.segments.forEach((seg, i) => {\r\n            seg.active = !!(\r\n                (SegNumber.encoding.get(this.number) >> (6 - i)) &\r\n                1\r\n            );\r\n        });\r\n\r\n        this.draw();\r\n    }\r\n}\r\n","import 'regenerator-runtime/runtime';\r\nimport { Colon } from './canvas-assets/colon.class';\r\nimport { SegNumber } from './canvas-assets/seg-number.class';\r\nimport { Segment } from './canvas-assets/Segment.class';\r\nimport { Point } from './classes/point.class';\r\n\r\nclass Main {\r\n    private _canvas: HTMLCanvasElement;\r\n    private _context: CanvasRenderingContext2D;\r\n    private numbers: SegNumber[];\r\n    private colons: Colon[];\r\n    private segSpacing = Segment.width * 1.4;\r\n\r\n    private _redSlider: HTMLInputElement;\r\n    private _greenSlider: HTMLInputElement;\r\n    private _blueSlider: HTMLInputElement;\r\n\r\n    private clockCenter = new Point(\r\n        this.segSpacing * 3 + (Segment.height * 1.8) / 2,\r\n        Segment.width\r\n    );\r\n\r\n    constructor() {\r\n        this._canvas = document.querySelector('#canvasEl');\r\n\r\n        this._redSlider = document.querySelector(\r\n            '#colorRRange'\r\n        ) as HTMLInputElement;\r\n        this._greenSlider = document.querySelector(\r\n            '#colorGRange'\r\n        ) as HTMLInputElement;\r\n        this._blueSlider = document.querySelector(\r\n            '#colorBRange'\r\n        ) as HTMLInputElement;\r\n\r\n        this.init();\r\n    }\r\n\r\n    public init(): void {\r\n        this.initialiseControls();\r\n\r\n        this._context = this._canvas.getContext('2d');\r\n        this._canvas.width = window.innerWidth;\r\n        this._canvas.height = window.innerHeight;\r\n\r\n        this.colons = [\r\n            new Colon(\r\n                this._context,\r\n                new Point(this.segSpacing * 2, Segment.width)\r\n            ),\r\n            new Colon(\r\n                this._context,\r\n                new Point(\r\n                    this.segSpacing * 4 + Segment.height * 1.8,\r\n                    Segment.width\r\n                )\r\n            )\r\n        ];\r\n\r\n        this.numbers = [\r\n            new SegNumber(this._context, new Point(0, 0)),\r\n            new SegNumber(this._context, new Point(this.segSpacing, 0)),\r\n            new SegNumber(\r\n                this._context,\r\n                new Point(this.segSpacing * 2 + Segment.height * 1.8, 0)\r\n            ),\r\n            new SegNumber(\r\n                this._context,\r\n                new Point(this.segSpacing * 3 + Segment.height * 1.8, 0)\r\n            ),\r\n            new SegNumber(\r\n                this._context,\r\n                new Point(this.segSpacing * 4 + Segment.height * 3.6, 0)\r\n            ),\r\n            new SegNumber(\r\n                this._context,\r\n                new Point(this.segSpacing * 5 + Segment.height * 3.6, 0)\r\n            )\r\n        ];\r\n\r\n        this.update();\r\n        setInterval(() => {\r\n            this.update();\r\n        }, 1000);\r\n    }\r\n\r\n    public update(): void {\r\n        this._context.save();\r\n\r\n        this._context.fillStyle = 'black';\r\n        this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\r\n\r\n        this._context.translate(-this.clockCenter.x, -this.clockCenter.y);\r\n        this._context.translate(\r\n            this._canvas.width / 2,\r\n            this._canvas.height / 2\r\n        );\r\n\r\n        const date = new Date();\r\n        const digits: string[] = [];\r\n        digits.push(...this.numToDigits(date.getHours()));\r\n        digits.push(...this.numToDigits(date.getMinutes()));\r\n        digits.push(...this.numToDigits(date.getSeconds()));\r\n\r\n        this.numbers.forEach((num, i) => {\r\n            num.number = parseInt(digits[i]);\r\n            num.update();\r\n        });\r\n\r\n        this.colons.forEach(col => {\r\n            col.update();\r\n        });\r\n\r\n        this._context.restore();\r\n    }\r\n\r\n    private numToDigits(num: number): string[] {\r\n        return num\r\n            .toString()\r\n            .padStart(2, '0')\r\n            .split('');\r\n    }\r\n\r\n    private initialiseControls() {\r\n        this._redSlider.oninput = (e: Event) =>\r\n            (Segment.red = parseInt(this._redSlider.value));\r\n        this._greenSlider.oninput = (e: Event) =>\r\n            (Segment.green = parseInt(this._greenSlider.value));\r\n        this._blueSlider.oninput = (e: Event) =>\r\n            (Segment.blue = parseInt(this._blueSlider.value));\r\n    }\r\n}\r\n\r\nconst app = new Main();\r\n"]}